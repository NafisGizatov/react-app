{"version":3,"sources":["window.tsx","main.tsx","index.tsx"],"names":["commonZindex","WindowXP","props","activate","_updateIndex","setState","isBlured","zIndex","_onMouseDown","event","windowDragAndDrop","dX","clientX","state","windowLeft","dY","clientY","windowTop","_onMouseUp","_onMouseMove","persist","_onClose","isClosed","_toggleCollaps","collapsed","_reculcIndex","window","dispatchEvent","Event","question","windowHeight","windowWidth","xhr","XMLHttpRequest","open","onload","readyState","status","answer","convert","response","compact","search","qText","Question","_text","replace","beforeQuestionArr","match","console","log","picArr","length","BeforeQuestion","Pic","error","statusText","onerror","send","addEventListener","this","width","height","top","left","className","onClick","style","_getWindowStyle","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","alt","src","Answer","Comments","React","Component","Main","_onClick","NewWindowlement","createElement","key","Math","random","toString","windows","concat","_getWindows","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65b76e88.chunk.js","sourcesContent":["import React, { MouseEvent as reactMouseEvent} from 'react';\nimport * as convert from 'xml-js';\n\ninterface IProps {\n}\n\ninterface IParcedString {\n  _text: string;\n}\n\ninterface IState {\n  isBlured: boolean;\n  collapsed: boolean;\n  windowHeight: number;\n  windowWidth: number;\n  windowTop: number;\n  windowLeft: number;\n  windowDragAndDrop: boolean;\n  dX: number;\n  dY: number;\n  isClosed: boolean;\n  zIndex: number;\n  question: Partial<{\n    BeforeQuestion?: string;\n    Question: IParcedString;\n    Answer: IParcedString;\n    Comments: IParcedString;\n    Author: IParcedString;\n    Pic?: string;\n  }>;\n}\n\nlet commonZindex = 1;\n\nclass WindowXP extends React.Component<IProps, IState> {\n    constructor(props: object) {\n      super(props);\n        this.state = {\n            isBlured: false,\n            collapsed: false,\n            question: {},\n            zIndex: ++commonZindex,\n            isClosed: false,\n            dX: 0,\n            dY: 0,\n            windowHeight: 300,\n            windowWidth: 500,\n            windowTop: 8,\n            windowLeft: 80,\n            windowDragAndDrop: false\n        }\n    }\n\n    async componentDidMount(): Promise<void> {\n      var xhr = new XMLHttpRequest()\n      xhr.open(\"GET\", 'https://db.chgk.info/xml/random/from_2012-01-01/limit1/', true);\n      xhr.onload = () => {\n        if (xhr.readyState === 4){\n          if (xhr.status === 200){\n            const answer = convert.xml2js(xhr.response, {compact: true}) as {search: any};\n            const question = answer?.search?.question;\n            let qText = question?.Question?._text.replace(/\\r?\\n/g, ' ');\n\n            const BEFORE_QUEST_REGEXP = /(.*?)<раздатка>(.*?)<\\/раздатка>/;\n            const beforeQuestionArr = qText.match(BEFORE_QUEST_REGEXP);\n            console.log(beforeQuestionArr);\n            const PIC_REGEXP = /\\(pic: (.*)\\)/;\n            const picArr = qText.match(PIC_REGEXP);\n\n            if (beforeQuestionArr?.length) {\n              question.BeforeQuestion = beforeQuestionArr[2];\n              qText = qText.replace(beforeQuestionArr[0], '');\n            }\n\n            if (picArr?.length) {\n              question.Pic = picArr[1];\n              qText = qText.replace(picArr[0], '');\n            }\n\n            question.Question._text = qText;\n            if (question) {\n              this.setState({\n                question: question\n              })\n            }\n\n\n          } else {\n            console.error(xhr.statusText)\n          }\n        }\n      }\n      xhr.onerror = function(){\n        console.error(xhr.statusText)\n      }\n      xhr.send(null);\n      window.addEventListener('reculcIndex', this._reculcIndex);\n      this._updateIndex();\n    }\n\n    activate = () => {\n      this._updateIndex();\n      this.setState({\n        isBlured: false,\n        zIndex: ++commonZindex\n      })\n    }\n\n    private _onMouseDown = (event: reactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      \n      this.setState({\n        isBlured: false,\n        zIndex: ++commonZindex,\n        windowDragAndDrop: true,\n        dX: event.clientX - this.state.windowLeft,\n        dY: event.clientY - this.state.windowTop\n      })\n    }\n\n    private _onMouseUp = () => {\n      this.setState({\n        windowDragAndDrop: false\n      })\n    }\n\n    private _onMouseMove= (event: reactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      event.persist();\n      if (this.state.windowDragAndDrop) {\n        this.setState({\n          windowTop: event.clientY - this.state.dY,\n          windowLeft: event.clientX - this.state.dX\n        })\n      }\n    }\n\n    private _getWindowStyle(): object {\n      return {\n        width: this.state.windowWidth,\n        height: this.state.windowHeight,\n        top: this.state.windowTop,\n        left: this.state.windowLeft,\n        zIndex: this.state.zIndex\n      }\n    }\n\n    private _onClose = () =>{\n        this.setState({\n          isClosed: true\n        })\n    }\n\n    private _toggleCollaps = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    }\n\n    private _reculcIndex = () => {\n      this.setState({\n        isBlured: this.state.zIndex !== commonZindex\n      });\n    }\n\n    private _updateIndex = () => {\n      window.dispatchEvent(new Event('reculcIndex'));\n    }\n\n    render() {\n        return (\n          <div className={\n            (this.state.isBlured ? 'is-blured' : '') +\n            \" window_XP \" + (this.state.isClosed ? 'is-hidden' : '')\n          }\n          onClick={this._updateIndex}\n           style={this._getWindowStyle()}>\n            <div className={\"windowBar \" + (this.state.windowDragAndDrop ? 'cursor-pointer' : '')}\n                onMouseDown={this._onMouseDown}\n                onMouseUp={this._onMouseUp} \n                onMouseMove={this._onMouseMove}\n                onMouseLeave={this._onMouseUp} \n            >   \n            <div className=\"closeButton cursor-pointer\" onClick={this._onClose}>X</div>\n            </div>\n            <div className=\"windowMain\" onMouseDown={this.activate}>\n              <div className=\"question\">\n                {this.state.question.Pic ? <div className=\"QuestionPic\"><img alt={this.state.question.Pic} src={\"https://db.chgk.info/images/db/\" + this.state.question.Pic}/></div> : ''}\n                {this.state.question.BeforeQuestion ? <div className=\"BeforeQuestion\">{this.state.question.BeforeQuestion}</div> : ''}\n                {this.state.question.Question?._text}\n              </div>\n              <div className=\"\">\n                <span onClick={this._toggleCollaps} className=\"cursor-pointer\">&#10157; ... </span>\n                <span className={\"answer \" + (this.state.collapsed ? '' : 'is-hidden')}>{this.state.question.Answer?._text}</span>\n                <div className={this.state.collapsed ? '' : 'is-hidden'}>\n                  {this.state.question.Comments?._text}\n                </div>\n              </div>\n            </div>\n            <div className=\"windowFooter\"></div>\n          </div>\n        );\n      }\n}\n\nexport default WindowXP;","import React from 'react';\nimport WindowXP from './window';\n\ninterface IProps {\n}\n\ninterface IState {\n  windows: any\n}\n\nclass Main extends React.Component<IProps, IState> {\n    constructor(props: object) {\n      super(props);\n        this.state = {\n            windows: []\n        }\n    }\n\n    private _onClick = () => {\n      const NewWindowlement = React.createElement(WindowXP, {\n          key: Math.random().toString()\n      });    \n      this.setState({\n        windows: this.state.windows.concat([NewWindowlement])\n      })\n    }\n\n    private _getWindows(): any {\n      return <div className=\"MainWindow\">\n          {[<div className=\"addButton\" key=\"adddBtn\" onClick={this._onClick}>+</div>].concat(this.state.windows)}\n        </div>\n    }\n\n    render() {\n        return this._getWindows();\n      }\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\n\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}