{"version":3,"sources":["window.tsx","main.tsx","index.tsx"],"names":["commonZindex","WindowXP","props","activate","setState","zIndex","_onMouseDown","event","windowDragAndDrop","dX","clientX","state","windowLeft","dY","clientY","windowTop","_onMouseUp","_onMouseMove","persist","_onClose","isClosed","_toggleCollaps","collapsed","question","windowHeight","windowWidth","xhr","XMLHttpRequest","open","onload","readyState","status","answer","convert","response","compact","search","console","log","error","statusText","onerror","send","width","this","height","top","left","className","style","_getWindowStyle","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","onClick","Question","_text","Answer","Comments","React","Component","Main","_onClick","windows","concat","_getWindows","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a08c6ef.chunk.js","sourcesContent":["import React, { MouseEvent as reactMouseEvent} from 'react';\nimport * as convert from 'xml-js';\n\ninterface IProps {\n}\n\ninterface IParcedString {\n  _text: string;\n}\n\ninterface IState {\n  collapsed: boolean;\n  windowHeight: number;\n  windowWidth: number;\n  windowTop: number;\n  windowLeft: number;\n  windowDragAndDrop: boolean;\n  dX: number;\n  dY: number;\n  isClosed: boolean;\n  zIndex: number;\n  question: Partial<{\n    Question: IParcedString;\n    Answer: IParcedString;\n    Comments: IParcedString;\n    Author: IParcedString;\n  }>;\n}\n\nlet commonZindex = 1;\n\nclass WindowXP extends React.Component<IProps, IState> {\n    constructor(props: object) {\n      super(props);\n        this.state = {\n            collapsed: false,\n            question: {},\n            zIndex: ++commonZindex,\n            isClosed: false,\n            dX: 0,\n            dY: 0,\n            windowHeight: 300,\n            windowWidth: 500,\n            windowTop: 8,\n            windowLeft: 8,\n            windowDragAndDrop: false\n        }\n    }\n\n    async componentDidMount(): Promise<void> {\n      // const xml = await fetch('http://db.chgk.info/xml/random/from_2012-01-01/limit1');\n      // // var result2 = convert.xml2js(xml, {compact: false});\n      // //   console.log(result2)\n      // console.log(convert, xml.json());\n      var xhr = new XMLHttpRequest()\n      xhr.open(\"GET\", 'https://db.chgk.info/xml/random/from_2012-01-01/limit1', true);\n      xhr.onload = () => {\n        if (xhr.readyState === 4){\n          if (xhr.status === 200){\n            const answer = convert.xml2js(xhr.response, {compact: true}) as {search: any};\n            const question = answer?.search?.question;\n            if (question) {\n              this.setState({\n                question: question\n              })\n            }\n\n\n            console.log(question);\n          } else {\n            console.error(xhr.statusText)\n          }\n        }\n      }\n      xhr.onerror = function(){\n        console.error(xhr.statusText)\n      }\n      xhr.send(null);\n    }\n\n    activate = () => {\n      this.setState({\n        zIndex: ++commonZindex\n      })\n    }\n\n    private _onMouseDown = (event: reactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      this.setState({\n        zIndex: ++commonZindex,\n        windowDragAndDrop: true,\n        dX: event.clientX - this.state.windowLeft,\n        dY: event.clientY - this.state.windowTop\n      })\n    }\n\n    private _onMouseUp = () => {\n      this.setState({\n        windowDragAndDrop: false\n      })\n    }\n\n    private _onMouseMove= (event: reactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      event.persist();\n      if (this.state.windowDragAndDrop) {\n        this.setState({\n          windowTop: event.clientY - this.state.dY,\n          windowLeft: event.clientX - this.state.dX\n        })\n      }\n    }\n\n    private _getWindowStyle(): object {\n      return {\n        width: this.state.windowWidth,\n        height: this.state.windowHeight,\n        top: this.state.windowTop,\n        left: this.state.windowLeft,\n        zIndex: this.state.zIndex\n      }\n    }\n\n    private _onClose = () =>{\n        this.setState({\n          isClosed: true\n        })\n    }\n\n    private _toggleCollaps = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    }\n\n    render() {\n        return (\n          <div className={\"window_XP \" + (this.state.isClosed ? 'is-hidden' : '')} style={this._getWindowStyle()}>\n            <div className={\"windowBar \" + (this.state.windowDragAndDrop ? 'cursor-pointer' : '')}\n                onMouseDown={this._onMouseDown}\n                onMouseUp={this._onMouseUp} \n                onMouseMove={this._onMouseMove}\n                onMouseLeave={this._onMouseUp} \n            >   \n            <div className=\"closeButton cursor-pointer\" onClick={this._onClose}>X</div>\n            </div>\n            <div className=\"windowMain\" onMouseDown={this.activate}>\n              <div className=\"question\">\n                {this.state.question.Question?._text}\n              </div>\n              <div className=\"\">\n                <span onClick={this._toggleCollaps} className=\"cursor-pointer\">&#10157; ... </span>\n                <span className={\"answer \" + (this.state.collapsed ? '' : 'is-hidden')}>{this.state.question.Answer?._text}</span>\n                <div className={this.state.collapsed ? '' : 'is-hidden'}>\n                  {this.state.question.Comments?._text}\n                </div>\n              </div>\n            </div>\n            <div className=\"windowFooter\"></div>\n          </div>\n        );\n      }\n}\n\nexport default WindowXP;","import React from 'react';\nimport WindowXP from './window';\n\ninterface IProps {\n}\n\ninterface IState {\n  windows: any\n}\n\nclass Main extends React.Component<IProps, IState> {\n    constructor(props: object) {\n      super(props);\n        this.state = {\n            windows: []\n        }\n    }\n\n    private _onClick = () => {\n      this.setState({\n        windows: this.state.windows.concat([<WindowXP/>])\n      })\n    }\n\n    private _getWindows(): any {\n      return [<div className=\"addButton\" onClick={this._onClick}>+</div>].concat(this.state.windows);\n    }\n\n    render() {\n        return this._getWindows();\n      }\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './main';\n\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}